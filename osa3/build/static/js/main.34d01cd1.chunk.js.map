{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","onChange","PersonForm","onSubmit","addPerson","valueName","onChangeName","valueNumber","onChangeNumber","type","Persons","filter","persons","deletePerson","personsToShow","person","name","toLowerCase","includes","li","marginLeft","map","key","style","number","onClick","Notification","message","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","useEffect","personService","initialPersons","event","target","preventDefault","personObject","find","undefined","window","confirm","returnedPerson","p","setTimeout","catch","error","personCreated","concat","ReactDOM","render","document","getElementById"],"mappings":"4QACMA,EAAU,eAoBD,EAlBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EAbA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAW9B,EATA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EALM,SAACG,GAElB,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN9BM,EAVA,SAACC,GACZ,OACI,kDACsB,2BACEC,MAASD,EAAMC,MACfC,SAAYF,EAAME,aCenCC,EApBI,SAACH,GAChB,OACI,0BAAMI,SAAUJ,EAAMK,WAClB,sCACU,2BACEJ,MAASD,EAAMM,UACfJ,SAAYF,EAAMO,gBAE9B,wCACY,2BACIN,MAASD,EAAMQ,YACfN,SAAYF,EAAMS,kBAElC,6BACI,4BAAQC,KAAK,UAAb,UCIDC,EAlBC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACzBC,EAA2B,KAAXH,EAChBC,EACAA,EAAQD,QAAO,SAAAI,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASP,MAC5DQ,EAAK,CACPC,WAAY,IAEhB,OACIN,EAAcO,KAAI,SAAAN,GAAM,OACpB,wBAAIO,IAAKP,EAAOC,KAAMO,MAAOJ,GACxBJ,EAAOC,KADZ,IACmBD,EAAOS,OAD1B,SAGI,4BAAQC,QAAS,kBAAMZ,EAAaE,EAAOpB,MAA3C,uBCQD+B,EApBM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QACdJ,EAAQ,CACVK,MAFqC,EAAZA,MAGzBC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAElB,OAAgB,OAAZP,EACO,KAGP,yBAAKJ,MAAOA,GACPI,IC0GEQ,G,MAnHH,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACNxB,EADM,KACGyB,EADH,OAEkBD,mBAAS,IAF3B,mBAENE,EAFM,KAEGC,EAFH,OAGsBH,mBAAS,IAH/B,mBAGNI,EAHM,KAGKC,EAHL,OAIgBL,mBAAS,IAJzB,mBAINzB,EAJM,KAIE+B,EAJF,OAK4BN,mBAAS,CAAC,KAAM,KAL5C,mBAKNO,EALM,KAKQC,EALR,KAOdC,qBAAU,WACNC,IAEKxD,MAAK,SAAAyD,GACFV,EAAWU,QAEpB,IAsFH,OACI,6BACA,yCACA,kBAAC,EAAD,CAAcpB,QAASgB,EAAa,GAAIf,MAAOe,EAAa,KAC5D,kBAAC,EAAD,CAAQ3C,MAAOW,EAAQV,SARA,SAAC+C,GACxBN,EAAUM,EAAMC,OAAOjD,UAQvB,yCACA,kBAAC,EAAD,CACII,UA3FU,SAAC4C,GACfA,EAAME,iBACN,IAAMC,EAAe,CACjBnC,KAAOsB,EACPd,OAASgB,GAEPzB,EAASH,EAAQwC,MAAK,SAAArC,GAAM,OAAIA,EAAOC,OAASsB,UACvCe,IAAXtC,EACIuC,OAAOC,QAAP,UAAkBxC,EAAOC,KAAzB,iGAEA8B,EACY/B,EAAOpB,GAAIwD,GAClB7D,MAAK,SAAAkE,GACFnB,EAAWzB,EAAQS,KAAI,SAAAoC,GAAC,OAAIA,EAAE9D,KAAO6D,EAAe7D,GAAK8D,EAAID,MAC7DZ,EAAgB,CAAC,GAAD,OAAIY,EAAexC,KAAnB,qBAA4C,UAC5D0C,YAAW,WACPd,EAAgB,CAAC,KAAM,OACxB,QAENe,OAAM,SAAAC,GACHhB,EAAgB,CAAC,eAAD,OAAgB7B,EAAOC,KAAvB,yCACA,QAChB0C,YAAW,WACPd,EAAgB,CAAC,KAAM,OACxB,KACHP,EAAWzB,EAAQD,QAAO,SAAA8C,GAAC,OAAIA,EAAE9D,KAAOoB,EAAOpB,UAI3DmD,EACYK,GACP7D,MAAK,SAAAuE,GACFxB,EAAWzB,EAAQkD,OAAOD,IAC1BjB,EAAgB,CAAC,SAAD,OAAUiB,EAAc7C,MAAQ,UAChD0C,YAAW,WACPd,EAAgB,CAAC,KAAM,OACxB,QAENe,OAAM,SAAAC,GACHhB,EAAgB,CAACgB,EAAMrE,SAASC,KAAKoE,MAAO,QAC5CF,YAAW,WACPd,EAAgB,CAAC,KAAM,OACxB,QAGfL,EAAW,IACXE,EAAa,KA8CTpC,UAAWiC,EAAShC,aApBH,SAAC0C,GACtBT,EAAWS,EAAMC,OAAOjD,QAoBpBO,YAAaiC,EAAWhC,eAjBL,SAACwC,GACxBP,EAAaO,EAAMC,OAAOjD,UAiB1B,uCACA,kBAAC,EAAD,CAASW,OAAQA,EAAQC,QAASA,EAASC,aA9C1B,SAAClB,GAClB,IAAMoB,EAASH,EAAQwC,MAAK,SAAAK,GAAC,OAAIA,EAAE9D,KAAOA,KACtC2D,OAAOC,QAAP,iBAAyBxC,EAAOC,KAAhC,OACA8B,EACkBnD,GACbL,MAAK,WACF+C,EAAWzB,EAAQD,QAAO,SAAA8C,GAAC,OAAIA,EAAE9D,KAAOA,MACxCiD,EAAgB,CAAC,WAAD,OAAY7B,EAAOC,MAAQ,UAC3C0C,YAAW,WACPd,EAAgB,CAAC,KAAM,OACxB,QAENe,OAAM,SAAAC,GACHhB,EAAgB,CAAC,eAAD,OAAgB7B,EAAOC,KAAvB,yCACA,QAChB0C,YAAW,WACPd,EAAgB,CAAC,KAAM,OACxB,KACHP,EAAWzB,EAAQD,QAAO,SAAA8C,GAAC,OAAIA,EAAE9D,KAAOA,eCrF5DoE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.34d01cd1.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson };","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input \r\n                                value = {props.value}\r\n                                onChange = {props.onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name: <input\r\n                        value = {props.valueName}\r\n                        onChange = {props.onChangeName} />\r\n            </div>\r\n            <div>\r\n                number: <input\r\n                            value = {props.valueNumber}\r\n                            onChange = {props.onChangeNumber} /> \r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({filter, persons, deletePerson}) => {\r\n    const personsToShow = filter === \"\" \r\n        ? persons \r\n        : persons.filter(person => person.name.toLowerCase().includes(filter))\r\n    const li = {\r\n        marginLeft: 30,\r\n    }\r\n    return (\r\n        personsToShow.map(person =>\r\n            <li key={person.name} style={li}>\r\n                {person.name} {person.number}\r\n                &emsp;\r\n                <button onClick={() => deletePerson(person.id)}>Delete contact</button>\r\n            </li>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, color }) => {\r\n    const style = {\r\n        color: color,\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport './App.css'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ notification, setNotification ] = useState([null, ''])\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name : newName,\n            number : newNumber\n        }\n        const person = persons.find(person => person.name === newName)\n        if (person !== undefined){\n            if (window.confirm(`${person.name} is already added to the phonebook,\n                replace the old number with a new one?`)) {\n                personService\n                    .update(person.id, personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n                        setNotification([`${returnedPerson.name}'s number updated`, 'green'])\n                        setTimeout(() => {\n                            setNotification([null, ''])\n                        }, 3000)\n                    })\n                    .catch(error => {\n                        setNotification([`the person '${person.name}' was already deleted from the server`, \n                                        'red'])\n                        setTimeout(() => {\n                            setNotification([null, ''])\n                        }, 3000)\n                        setPersons(persons.filter(p => p.id !== person.id))\n                    })\n            }\n        } else {\n            personService\n                .create(personObject)\n                .then(personCreated => {\n                    setPersons(persons.concat(personCreated))\n                    setNotification([`Added ${personCreated.name}`, 'green'])\n                    setTimeout(() => {\n                        setNotification([null, ''])\n                    }, 3000)\n                })\n                .catch(error => {\n                    setNotification([error.response.data.error, 'red'])\n                    setTimeout(() => {\n                        setNotification([null, ''])\n                    }, 5000)\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n    \n    const deletePerson = (id) => {\n        const person = persons.find(p => p.id === id)\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personService\n                .deletePerson(id)\n                .then(() => {\n                    setPersons(persons.filter(p => p.id !== id))\n                    setNotification([`Deleted ${person.name}`, 'green'])\n                    setTimeout(() => {\n                        setNotification([null, ''])\n                    }, 3000)\n                })\n                .catch(error => {\n                    setNotification([`the person '${person.name}' was already deleted from the server`, \n                                    'red'])\n                    setTimeout(() => {\n                        setNotification([null, ''])\n                    }, 3000)\n                    setPersons(persons.filter(p => p.id !== id))\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    \n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value) \n    }\n    \n    return (\n        <div>\n        <h2>Phonebook</h2>\n        <Notification message={notification[0]} color={notification[1]} />\n        <Filter value={filter} onChange={handleFilterChange} />\n        <h2>Add a new</h2>\n        <PersonForm\n            addPerson={addPerson}\n            valueName={newName} onChangeName={handleNameChange}\n            valueNumber={newNumber} onChangeNumber={handleNumberChange} />\n        <h2>Numbers</h2>\n        <Persons filter={filter} persons={persons} deletePerson={deletePerson}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}